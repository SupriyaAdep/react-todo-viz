{"version":3,"sources":["todos/AddTodo.js","Icons.js","UI/List/ListItem.js","todos/Todo.js","UI/List/ListGroup.js","todos/VisibleTodoList.js","todos/status.js","UI/Button/CButton.js","todos/Footer.js","dashboard/DashboardContainer.js","AppContainer.js","App.js","serviceWorker.js","index.js"],"names":["AddTodo","newTodo","handleChange","handleSubmit","Form","onSubmit","InputGroup","className","Prepend","Text","id","FormControl","aria-label","value","name","onChange","autoComplete","DeleteIcon","_","viewBox","width","height","xmlns","d","ListGroupItem","props","children","Todo","todos","toggleTodo","deleteTodo","length","map","todo","ListItem","key","Check","custom","inline","label","type","checked","completed","text","onClick","ListGroup","VisibleTodoList","this","currentFilter","filteredTodos","filter","status","Component","COMPLETED","ACTIVE","ALL","CButtonGroup","CButton","clicked","btnType","active","Footer","todoLength","filterTodo","todostatus","am4core","am4themes_dark","am4themes_animated","DashboardContainer","generatePieChart","chartId","chartData","chart","am4charts","radius","numberFormatter","numberFormat","innerRadius","data","pieSeries","series","push","dataFields","category","hiddenState","properties","opacity","endAngle","startAngle","legend","itemContainers","template","clickable","cursorOverStyle","default","generateData","stats","reduce","acc","Object","entries","count","prevProps","renderChart","chartdata","style","AppContainer","state","e","target","setState","preventDefault","addTodo","uuid","todoId","filteredItems","modifiedTodos","Row","Col","md","App","Container","fluid","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qcAsBeA,EAnBC,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aACxC,OACE,kBAACC,EAAA,EAAD,CAAMC,SAAUF,GACd,kBAACG,EAAA,EAAD,CAAYC,UAAU,QACpB,kBAACD,EAAA,EAAWE,QAAZ,KACE,kBAACF,EAAA,EAAWG,KAAZ,CAAiBC,GAAG,gBAApB,UAEF,kBAACC,EAAA,EAAD,CACEC,aAAW,2BACXC,MAAOZ,EACPa,KAAK,UACLC,SAAUb,EACVc,aAAa,WCbVC,EAAa,SAAAC,GAAC,OACzB,yBACEC,QAAQ,sBACRC,MAAM,KACNC,OAAO,KACPC,MAAM,8BAEN,0BAAMC,EAAE,8JACR,0BAAMA,EAAE,8JACR,0BAAMA,EAAE,qyCACR,0BAAMA,EAAE,gKCFGC,EARO,SAAAC,GACpB,OACE,yBAAKlB,UAAS,4CAAuCkB,EAAMlB,YACxDkB,EAAMC,WC0BEC,EA1BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAYC,EAAtB,EAAsBA,WAAtB,OACXF,EAAMG,OAAS,EACbH,EAAMI,KAAI,SAAAC,GAAI,OACZ,kBAACC,EAAD,CAAU3B,UAAU,oBAAoB4B,IAAKF,EAAKvB,IAChD,kBAACN,EAAA,EAAKgC,MAAN,CACED,IAAKF,EAAKvB,GACV2B,QAAM,EACNC,QAAM,EACNC,MAAM,GACNC,KAAK,WACL9B,GAAE,wBAAmB,WAAnB,IAAiCuB,EAAKvB,IACxC+B,QAASR,EAAKS,UACd3B,SAAU,kBAAMc,EAAWI,EAAKvB,OAElC,uBAAGH,UAAS,oBAAe0B,EAAKS,UAAY,gBAAkB,KAC3DT,EAAKU,MAER,yBAAKpC,UAAU,cAAcqC,QAAS,kBAAMd,EAAWG,EAAKvB,MAC1D,kBAAC,EAAD,WAKN,kBAACwB,EAAD,wBCtBWW,EAJG,SAAApB,GAChB,OAAO,yBAAKlB,UAAU,cAAckB,EAAMC,WCqB7BoB,E,iLAnBH,IAAD,EACkDC,KAAKtB,MAAtDG,EADD,EACCA,MAAOoB,EADR,EACQA,cAAenB,EADvB,EACuBA,WAAYC,EADnC,EACmCA,WACpCmB,EAAgBrB,EAAMsB,QAAO,SAAAjB,GAAI,OAAIA,EAAKkB,SAAWH,KAC3D,OACE,kBAAC,EAAD,KACqB,QAAlBA,EACC,kBAAC,EAAD,CAAMpB,MAAOA,EAAOC,WAAYA,EAAYC,WAAYA,IAExD,kBAAC,EAAD,CACEF,MAAOqB,EACPpB,WAAYA,EACZC,WAAYA,S,GAZMsB,aCJjBC,EAAY,YACZC,EAAS,SACTC,EAAM,MCENC,G,OAAe,SAAA/B,GAC1B,OAAO,yBAAKlB,UAAU,iBAAiBkB,EAAMC,YAIlC+B,EAAU,SAAAhC,GACrB,OACE,4BACEmB,QAASnB,EAAMiC,QACfnD,UAAS,kBAAakB,EAAMkC,QAAnB,aAA+BlC,EAAMmC,OAAS,SAAW,KAEjEnC,EAAMC,WCwBEmC,EAlCA,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,WAAYd,EAAgC,EAAhCA,cAAee,EAAiB,EAAjBA,WAC3C,OACE,kBAAC,EAAD,CAAexD,UAAU,gBACvB,6BACGuD,EADH,IACe,uCAEf,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEF,OAAQZ,IAAkBgB,EAC1BN,QAAS,kBAAMK,EAAWC,IAC1BL,QAAQ,oBAHV,OAOA,kBAAC,EAAD,CACEC,OAAQZ,IAAkBgB,EAC1BN,QAAS,kBAAMK,EAAWC,IAC1BL,QAAQ,mBAHV,UAOA,kBAAC,EAAD,CACEC,OAAQZ,IAAkBgB,EAC1BN,QAAS,kBAAMK,EAAWC,IAC1BL,QAAQ,oBAHV,cAQF,gC,mDC1BNM,IAAiBC,KACjBD,IAAiBE,K,IAiFFC,E,2MA9EbC,iBAAmB,SAACC,EAASC,GAC3B,IAAIC,EAAQP,IAAeK,EAASG,KACpCD,EAAME,OAAST,IAAgB,IAC/BO,EAAMG,gBAAgBC,aAAe,IAGrCJ,EAAMK,YAAcZ,IAAgB,IACpCO,EAAMM,KAAOP,EAGb,IAAIQ,EAAYP,EAAMQ,OAAOC,KAAK,IAAIR,KACtCM,EAAUG,WAAWrE,MAAQ,QAC7BkE,EAAUG,WAAWC,SAAW,SAIhCJ,EAAUK,YAAYC,WAAWC,QAAU,EAC3CP,EAAUK,YAAYC,WAAWE,UAAY,GAC7CR,EAAUK,YAAYC,WAAWG,YAAc,GAG/ChB,EAAMiB,OAAS,IAAIhB,IACnBD,EAAMiB,OAAOC,eAAeC,SAASC,WAAY,EACjDpB,EAAMiB,OAAOC,eAAeC,SAASE,gBACnC5B,IAAyB6B,S,EAE7BC,aAAe,SAAAjB,GAYb,IAXA,IAAIP,EAAY,GACZyB,EAAQlB,EAAKmB,QACf,SAACC,EAAKjE,GAIJ,OAHIA,EAAKkB,UAAU+C,GACjBA,EAAIjE,EAAKkB,UAEJ+C,IAET,CAAE5C,OAAQ,EAAGD,UAAW,IAG1B,MAA2B8C,OAAOC,QAAQJ,GAA1C,eAAkD,CAAC,IAAD,0BAAtC7D,EAAsC,KAAjCtB,EAAiC,KAKhD0D,EAAUU,KAAK,CACb9B,OAAQhB,EACRkE,MAAOxF,IAIX,OAAO0D,G,kFAEU+B,GACbA,EAAUxB,OAAS/B,KAAKtB,MAAMqD,MAAmC,IAA3B/B,KAAKtB,MAAMqD,KAAK/C,QAG1DgB,KAAKwD,YAAYxD,KAAKtB,MAAMqD,Q,0CAGG,IAA3B/B,KAAKtB,MAAMqD,KAAK/C,QAClBgB,KAAKwD,YAAYxD,KAAKtB,MAAMqD,Q,kCAGpBA,GACV,IAAI0B,EAAYzD,KAAKgD,aAAajB,GAClC/B,KAAKsB,iBAAiB,YAAamC,K,+BAGnC,OACE,oCACE,wBAAIjG,UAAU,WAAd,gBACA,yBAAKA,UAAU,mBACb,yBAAKG,GAAG,YAAY+F,MAAO,CAAEpF,OAAQ,gB,GAxEd+B,aCgGlBsD,G,kNA/FbC,MAAQ,CACN1G,QAAS,GACT2B,MAAO,GACPoB,cAAegB,G,EAGjB9D,aAAe,SAAA0G,GAAM,IACX/F,EAAU+F,EAAEC,OAAZhG,MACR,EAAKiG,SAAS,CAAE7G,QAASY,K,EAG3BV,aAAe,SAAAyG,GACbA,EAAEG,iBACyB,KAAvB,EAAKJ,MAAM1G,UACf,EAAK6G,SAAS,CACZ7G,QAAS,KAEX,EAAK+G,QAAQ,CACXtG,GAAIuG,MACJtE,KAAM,EAAKgE,MAAM1G,QACjBkD,OAAQa,EACRtB,WAAW,M,EAIfsE,QAAU,SAAA/E,GAER,EAAK6E,SAAS,CACZlF,MAAM,GAAD,mBAAM,EAAK+E,MAAM/E,OAAjB,CAAwBK,O,EAIjCH,WAAa,SAAAoF,GAEX,IAAMC,EAAgB,EAAKR,MAAM/E,MAAMsB,QAAO,SAAAjB,GAAI,OAAIA,EAAKvB,KAAOwG,KAClE,EAAKJ,SAAS,CACZlF,MAAOuF,K,EAIXpD,WAAa,SAAAZ,GACX,EAAK2D,SAAS,CACZ9D,cAAeG,K,EAInBtB,WAAa,SAAAnB,GAAO,IAEZ0G,EADY,EAAKT,MAAf/E,MACoBI,KAAI,SAAAC,GAAI,OAClCA,EAAKvB,KAAOA,EAAZ,eAESuB,EAFT,CAGMkB,OAAQlB,EAAKS,UAAYsB,EAAoBA,EAC7CtB,WAAYT,EAAKS,YAEnBT,KAEN,EAAK6E,SAAS,CACZlF,MAAOwF,K,wEAKT,OACE,kBAACC,EAAA,EAAD,CAAK9G,UAAU,iBACb,kBAAC+G,EAAA,EAAD,CAAKC,GAAI,EAAG7G,GAAG,kBAEb,wBAAIH,UAAU,WAAd,WACA,kBAAC,EAAD,CACEN,QAAS8C,KAAK4D,MAAM1G,QACpBC,aAAc6C,KAAK7C,aACnBC,aAAc4C,KAAK5C,eAGrB,kBAAC,EAAD,CACEyB,MAAOmB,KAAK4D,MAAM/E,MAClBoB,cAAeD,KAAK4D,MAAM3D,cAC1BnB,WAAYkB,KAAKlB,WACjBC,WAAYiB,KAAKjB,aAGnB,kBAAC,EAAD,CACEgC,WAAYf,KAAK4D,MAAM/E,MAAMG,OAC7BiB,cAAeD,KAAK4D,MAAM3D,cAC1Be,WAAYhB,KAAKgB,cAGrB,kBAACuD,EAAA,EAAD,CAAKC,GAAI,EAAG7G,GAAG,kBACb,kBAAC,EAAD,CAAoBoE,KAAM/B,KAAK4D,MAAM/E,c,GAzFpBwB,c,OCEZoE,MARf,WACE,OACE,kBAACC,EAAA,EAAD,CAAWC,OAAK,EAACnH,UAAU,iBACzB,kBAAC,EAAD,QCIcoH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e88058ad.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, FormControl, InputGroup } from 'react-bootstrap';\n\nconst AddTodo = ({ newTodo, handleChange, handleSubmit }) => {\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">+ Add</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          aria-label=\"Text input with checkbox\"\n          value={newTodo}\n          name=\"newTodo\"\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </InputGroup>\n    </Form>\n  );\n};\n\nexport default AddTodo;\n","import React from 'react';\n\nexport const DeleteIcon = _ => (\n  <svg\n    viewBox=\"-40 0 427 427.00131\"\n    width=\"20\"\n    height=\"20\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"m232.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0\" />\n    <path d=\"m114.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0\" />\n    <path d=\"m28.398438 127.121094v246.378906c0 14.5625 5.339843 28.238281 14.667968 38.050781 9.285156 9.839844 22.207032 15.425781 35.730469 15.449219h189.203125c13.527344-.023438 26.449219-5.609375 35.730469-15.449219 9.328125-9.8125 14.667969-23.488281 14.667969-38.050781v-246.378906c18.542968-4.921875 30.558593-22.835938 28.078124-41.863282-2.484374-19.023437-18.691406-33.253906-37.878906-33.257812h-51.199218v-12.5c.058593-10.511719-4.097657-20.605469-11.539063-28.03125-7.441406-7.421875-17.550781-11.5546875-28.0625-11.46875h-88.796875c-10.511719-.0859375-20.621094 4.046875-28.0625 11.46875-7.441406 7.425781-11.597656 17.519531-11.539062 28.03125v12.5h-51.199219c-19.1875.003906-35.394531 14.234375-37.878907 33.257812-2.480468 19.027344 9.535157 36.941407 28.078126 41.863282zm239.601562 279.878906h-189.203125c-17.097656 0-30.398437-14.6875-30.398437-33.5v-245.5h250v245.5c0 18.8125-13.300782 33.5-30.398438 33.5zm-158.601562-367.5c-.066407-5.207031 1.980468-10.21875 5.675781-13.894531 3.691406-3.675781 8.714843-5.695313 13.925781-5.605469h88.796875c5.210937-.089844 10.234375 1.929688 13.925781 5.605469 3.695313 3.671875 5.742188 8.6875 5.675782 13.894531v12.5h-128zm-71.199219 32.5h270.398437c9.941406 0 18 8.058594 18 18s-8.058594 18-18 18h-270.398437c-9.941407 0-18-8.058594-18-18s8.058593-18 18-18zm0 0\" />\n    <path d=\"m173.398438 154.703125c-5.523438 0-10 4.476563-10 10v189c0 5.519531 4.476562 10 10 10 5.523437 0 10-4.480469 10-10v-189c0-5.523437-4.476563-10-10-10zm0 0\" />\n  </svg>\n);\n","import React from 'react';\n\nconst ListGroupItem = props => {\n  return (\n    <div className={`list-group-custom list-group-item ${props.className}`}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default ListGroupItem;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { DeleteIcon } from '../Icons';\nimport ListItem from '../UI/List/ListItem';\n\nconst Todo = ({ todos, toggleTodo, deleteTodo }) =>\n  todos.length > 0 ? (\n    todos.map(todo => (\n      <ListItem className=\"list-group-custom\" key={todo.id}>\n        <Form.Check\n          key={todo.id}\n          custom\n          inline\n          label=\"\"\n          type=\"checkbox\"\n          id={`custom-inline-${'checkbox'}-${todo.id}`}\n          checked={todo.completed}\n          onChange={() => toggleTodo(todo.id)}\n        />\n        <p className={`todo-text ${todo.completed ? 'todo-complete' : ''}`}>\n          {todo.text}\n        </p>\n        <div className=\"todo-action\" onClick={() => deleteTodo(todo.id)}>\n          <DeleteIcon />\n        </div>\n      </ListItem>\n    ))\n  ) : (\n    <ListItem>No todos found</ListItem>\n  );\n\nexport default Todo;\n","import React from 'react';\n\nconst ListGroup = props => {\n  return <div className=\"list-group\">{props.children}</div>;\n};\n\nexport default ListGroup;\n","import React, { Component } from 'react';\nimport Todo from './Todo';\nimport ListGroup from '../UI/List/ListGroup';\n\nclass VisibleTodoList extends Component {\n  render() {\n    const { todos, currentFilter, toggleTodo, deleteTodo } = this.props;\n    const filteredTodos = todos.filter(todo => todo.status === currentFilter);\n    return (\n      <ListGroup>\n        {currentFilter === 'ALL' ? (\n          <Todo todos={todos} toggleTodo={toggleTodo} deleteTodo={deleteTodo} />\n        ) : (\n          <Todo\n            todos={filteredTodos}\n            toggleTodo={toggleTodo}\n            deleteTodo={deleteTodo}\n          />\n        )}\n      </ListGroup>\n    );\n  }\n}\n\nexport default VisibleTodoList;\n","export const COMPLETED = 'COMPLETED';\nexport const ACTIVE = 'ACTIVE';\nexport const ALL = 'ALL';\n","import React from 'react';\nimport './Button.css';\n\n// Group of Buttons\nexport const CButtonGroup = props => {\n  return <div className=\"cbutton-group\">{props.children}</div>;\n};\n\n// Single Button\nexport const CButton = props => {\n  return (\n    <button\n      onClick={props.clicked}\n      className={`cbutton ${props.btnType}  ${props.active ? 'active' : ''}`}\n    >\n      {props.children}\n    </button>\n  );\n};\n","import React from 'react';\nimport * as todostatus from './status';\nimport { CButtonGroup, CButton } from '../UI/Button/CButton';\nimport ListGroupItem from '../UI/List/ListItem';\n\nconst Footer = ({ todoLength, currentFilter, filterTodo }) => {\n  return (\n    <ListGroupItem className=\"todo-summary\">\n      <div>\n        {todoLength} <i> todos </i>\n      </div>\n      <CButtonGroup>\n        <CButton\n          active={currentFilter === todostatus.ALL}\n          clicked={() => filterTodo(todostatus.ALL)}\n          btnType=\"cprimary-outline\"\n        >\n          All\n        </CButton>\n        <CButton\n          active={currentFilter === todostatus.ACTIVE}\n          clicked={() => filterTodo(todostatus.ACTIVE)}\n          btnType=\"cdanger-outline\"\n        >\n          Active\n        </CButton>\n        <CButton\n          active={currentFilter === todostatus.COMPLETED}\n          clicked={() => filterTodo(todostatus.COMPLETED)}\n          btnType=\"csuccess-outline\"\n        >\n          Completed\n        </CButton>\n      </CButtonGroup>\n      <div></div>\n    </ListGroupItem>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport am4themes_dark from '@amcharts/amcharts4/themes/dark';\n\nimport './dash.css';\n\nam4core.useTheme(am4themes_dark);\nam4core.useTheme(am4themes_animated);\n\nclass DashboardContainer extends Component {\n  generatePieChart = (chartId, chartData) => {\n    let chart = am4core.create(chartId, am4charts.PieChart);\n    chart.radius = am4core.percent(70);\n    chart.numberFormatter.numberFormat = '#';\n\n    // Let's cut a hole in our Pie chart the size of 30% the radius\n    chart.innerRadius = am4core.percent(30);\n    chart.data = chartData;\n\n    // Add and configure Series\n    var pieSeries = chart.series.push(new am4charts.PieSeries());\n    pieSeries.dataFields.value = 'count';\n    pieSeries.dataFields.category = 'status';\n\n    // pieSeries.slices.template.propertyFields.fill = 'color';\n    // This creates initial animation\n    pieSeries.hiddenState.properties.opacity = 1;\n    pieSeries.hiddenState.properties.endAngle = -90;\n    pieSeries.hiddenState.properties.startAngle = -90;\n\n    // Add a legend\n    chart.legend = new am4charts.Legend();\n    chart.legend.itemContainers.template.clickable = false;\n    chart.legend.itemContainers.template.cursorOverStyle =\n      am4core.MouseCursorStyle.default;\n  };\n  generateData = data => {\n    let chartData = [];\n    let stats = data.reduce(\n      (acc, todo) => {\n        if (todo.status in acc) {\n          acc[todo.status]++;\n        }\n        return acc;\n      },\n      { ACTIVE: 0, COMPLETED: 0 }\n    );\n\n    for (const [key, value] of Object.entries(stats)) {\n      // let customColor = '#dc6788';\n      // if (key === 'COMPLETED') {\n      //   customColor = '#009688';\n      // }\n      chartData.push({\n        status: key,\n        count: value\n        // color: customColor\n      });\n    }\n    return chartData;\n  };\n  componentDidUpdate(prevProps) {\n    if (prevProps.data === this.props.data || this.props.data.length === 0) {\n      return;\n    }\n    this.renderChart(this.props.data);\n  }\n  componentDidMount() {\n    if (this.props.data.length !== 0) {\n      this.renderChart(this.props.data);\n    }\n  }\n  renderChart(data) {\n    let chartdata = this.generateData(data);\n    this.generatePieChart('pie-chart', chartdata);\n  }\n  render() {\n    return (\n      <>\n        <h1 className=\"heading\">My Dashboard</h1>\n        <div className=\"chart-container\">\n          <div id=\"pie-chart\" style={{ height: '100%' }}></div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default DashboardContainer;\n","import React, { Component } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport uuid from 'uuid';\nimport AddTodo from './todos/AddTodo';\nimport VisibleTodoList from './todos/VisibleTodoList';\nimport Footer from './todos/Footer';\nimport DashboardContainer from './dashboard/DashboardContainer';\nimport * as todostatus from './todos/status';\n\nimport './todos/todos.css';\n\nclass AppContainer extends Component {\n  state = {\n    newTodo: '',\n    todos: [],\n    currentFilter: todostatus.ALL\n  };\n\n  handleChange = e => {\n    const { value } = e.target;\n    this.setState({ newTodo: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.newTodo === '') return;\n    this.setState({\n      newTodo: ''\n    });\n    this.addTodo({\n      id: uuid(),\n      text: this.state.newTodo,\n      status: todostatus.ACTIVE,\n      completed: false\n    });\n  };\n\n  addTodo = todo => {\n    // Don't mutate the state while updating array\n    this.setState({\n      todos: [...this.state.todos, todo]\n    });\n  };\n\n  deleteTodo = todoId => {\n    // Don't mutate the state while updating array\n    const filteredItems = this.state.todos.filter(todo => todo.id !== todoId);\n    this.setState({\n      todos: filteredItems\n    });\n  };\n\n  filterTodo = status => {\n    this.setState({\n      currentFilter: status\n    });\n  };\n\n  toggleTodo = id => {\n    const { todos } = this.state;\n    const modifiedTodos = todos.map(todo =>\n      todo.id === id\n        ? {\n            ...todo,\n            status: todo.completed ? todostatus.ACTIVE : todostatus.COMPLETED,\n            completed: !todo.completed\n          }\n        : todo\n    );\n    this.setState({\n      todos: modifiedTodos\n    });\n  };\n\n  render() {\n    return (\n      <Row className=\"app-container\">\n        <Col md={6} id=\"todo-container\">\n          {/* Todo Form Component */}\n          <h1 className=\"heading\">My Todo</h1>\n          <AddTodo\n            newTodo={this.state.newTodo}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n          />\n          {/* Todo List Component */}\n          <VisibleTodoList\n            todos={this.state.todos}\n            currentFilter={this.state.currentFilter}\n            toggleTodo={this.toggleTodo}\n            deleteTodo={this.deleteTodo}\n          />\n          {/* Filter Panel */}\n          <Footer\n            todoLength={this.state.todos.length}\n            currentFilter={this.state.currentFilter}\n            filterTodo={this.filterTodo}\n          />\n        </Col>\n        <Col md={6} id=\"dash-container\">\n          <DashboardContainer data={this.state.todos} />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default AppContainer;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport AppContainer from './AppContainer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Container fluid className=\"app-container\">\n      <AppContainer />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}